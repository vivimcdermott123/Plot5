using ITensors
using ITensorMPS
using Plots
# Construct the Heisenberg Hamiltonian as an MPO
function heisenberg_mpo(N; J=1.0, S="S=1/2")
    sites = siteinds(S, N)
    os = OpSum()
    for i in 1:N-1
        os += 0.5J, "S+", i, "S-", i+1
        os += 0.5J, "S-", i, "S+", i+1
        os += J, "Sz", i, "Sz", i+1
    end
    return MPO(os, sites), sites
end

# Initialize state with fixed number of up spins (total Sz)
function initial_state_fixed_sz(sites, nup)
    N = length(sites)
    return [i <= nup ? "Up" : "Dn" for i in 1:N]
end

# Corrected magnetization profile calculation ⟨Sz⟩
function magnetization_profile(psi, sites)
    return [real(expect(psi, "Sz"; sites=sites, site_range=i)[1]) for i in 1:length(sites)]
end

function plot_all()
 # 5. Excited vs Ground State Magnetization
    psi0_ex = MPS(sites, initial_state_fixed_sz(sites, div(L,2)+1))
    _, psi_ex = run_dmrg(H, psi0_ex; maxdim=100)
    magnetization_ex = magnetization_profile(psi_ex, sites)
    plt5 = plot(1:L, magnetization, label="Ground State", xlabel="Site",
        ylabel="⟨Sz⟩", title="5. Magnetization: Ground vs Excited", marker=:o)
    plot!(plt5, 1:L, magnetization_ex, label="Excited State", marker=:square)

    # Arrange all plots
    plot(plt5, layout=(3,2), size=(1200,1000))
end

# Execute all plots
plot_all()
